# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT  = @INSTALL_SCRIPT@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR_P         = @MKDIR_P@
master_top_srcdir  = @master_top_srcdir@
bindir          = @bindir@
exec_prefix     = @exec_prefix@
prefix          = @prefix@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
sysconfdir      = @sysconfdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
PMPILIBNAME     = @PMPILIBNAME@

CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_LINK         = $(CC)
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LDFLAGS     =  @LDFLAGS@ 

VPATH = .:@srcdir@
DOCTEXT         = @DOCTEXT@
INCLUDES = -I../include
doc_sources = mpicc.txt mpif77.txt mpicxx.txt mpif90.txt mpiexec.txt

.SUFFIXES:
.SUFFIXES: .o .lo .c .man .html .latex .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
.txt.man:
	$(DOCTEXT) -man -mpath ../../man/man1 -ext 1 -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.txt.html:
	$(DOCTEXT) -html -mpath ../../www/www1  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.txt.latex:
	$(DOCTEXT) -latex -mpath ../../doc/refman  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../ \
	-configdir=. \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile mpi_sizeofs.f90 mpif90model.h config.status config.log config.cache *conf.cache config.system" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../../ && \
	if [ -x config.status ] ; then CONFIG_FILES=src/env/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o mpich2version
	-@rm -f mpich2version.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
	-@rm -f *.irlog*
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f mpixxx_opts.conf mpicc mpicc.conf mpicc.bash mpicxx mpicxx.conf mpicxx.bash mpif77 mpif77.conf mpif77.bash mpif90 mpif90.conf mpif90.bash parkill Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean:  distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: mpich2version

coverage: 
mpich2version: mpich2version.o   
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o mpich2version mpich2version.o  \
	../../lib/lib@MPILIBNAME@.a ${LIBS} 
# --------------------------------------------------------------------------
mandoc: ${doc_sources:.txt=.man}
htmldoc: ${doc_sources:.txt=.html}
latexdoc: ${doc_sources:.txt=.latex}
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Install target
install:  FORCE_TARGET 
	if [ ! -d ${DESTDIR}${exec_prefix} ] ; then $(MKDIR_P) ${DESTDIR}${exec_prefix} ; fi
	if [ ! -d ${DESTDIR}${prefix} ] ; then $(MKDIR_P) ${DESTDIR}${prefix} ; fi
	if [ ! -d ${DESTDIR}${bindir} ] ; then $(MKDIR_P) ${DESTDIR}${bindir} ; fi
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpich2version ${DESTDIR}${bindir}/mpich2version
	$(INSTALL_SCRIPT) mpicc ${DESTDIR}${bindir}/mpicc
	$(INSTALL_SCRIPT) parkill ${DESTDIR}${bindir}/parkill
	if [ ! -d ${DESTDIR}${sysconfdir} ] ; then $(MKDIR_P) ${DESTDIR}${sysconfdir} ; fi
	$(INSTALL_DATA) mpixxx_opts.conf ${DESTDIR}${sysconfdir}/mpixxx_opts.conf
	$(INSTALL_DATA) mpicc.conf ${DESTDIR}${sysconfdir}/mpicc.conf
	if [ -s mpicxx ] ; then $(INSTALL_SCRIPT) mpicxx ${DESTDIR}${bindir}/mpicxx ; fi
	if [ -s mpif77 ] ; then $(INSTALL_SCRIPT) mpif77 ${DESTDIR}${bindir}/mpif77 ; fi
	if [ -s mpif90 ] ; then $(INSTALL_SCRIPT) mpif90 ${DESTDIR}${bindir}/mpif90 ; fi
	if [ -s mpicxx.conf ] ; then $(INSTALL_DATA) mpicxx.conf ${DESTDIR}${sysconfdir}/mpicxx.conf ; fi
	if [ -s mpif77.conf ] ; then $(INSTALL_DATA) mpif77.conf ${DESTDIR}${sysconfdir}/mpif77.conf ; fi
	if [ -s mpif90.conf ] ; then $(INSTALL_DATA) mpif90.conf ${DESTDIR}${sysconfdir}/mpif90.conf ; fi
	${MAKE} install-postamble

install-strip:
	$(MAKE) INSTALL_STRIP_FLAG=-s install
uninstall: 
	-rm -f ${DESTDIR}${bindir}/mpich2version
	-rm -f ${DESTDIR}${bindir}/mpicc
	-rm -f ${DESTDIR}${bindir}/parkill
	-rm -f ${DESTDIR}${sysconfdir}/mpixxx_opts.conf
	-rm -f ${DESTDIR}${sysconfdir}/mpicc.conf
	-rm -f ${DESTDIR}${bindir}/mpicxx
	-rm -f ${DESTDIR}${bindir}/mpif77
	-rm -f ${DESTDIR}${bindir}/mpif90
	-rm -f ${DESTDIR}${sysconfdir}/mpicxx.conf
	-rm -f ${DESTDIR}${sysconfdir}/mpif77.conf
	-rm -f ${DESTDIR}${sysconfdir}/mpif90.conf
	${MAKE} uninstall-postamble
installcheck: 
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/timestamp: mpich2version.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpich2version.c > $(DEPS_DIR)/mpich2version.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpich2version.c >$(DEPS_DIR)/mpich2version.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpich2version.c >$(DEPS_DIR)/mpich2version.d
	echo "include $(DEPS_DIR)/mpich2version.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  mpich2version.c
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------


# Provide an alias for mpicxx to support tools that assume that mpicxx is
# called mpic++
install-postamble:
	if [ -x ${DESTDIR}${bindir}/mpicxx ] ; then \
	    cd ${DESTDIR}${bindir} && ln -sf mpicxx mpic++ ; fi
uninstall-postamble:
	rm -f ${DESTDIR}${bindir}/mpic++

FORCE_TARGET:

